error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:12:13
   |
LL |     let _ = Some(Some(1)).filter(Option::is_some).map(Option::unwrap);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(Some(1)).flatten()`
   |
   = note: `-D clippy::option-filter-map` implied by `-D warnings`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:13:13
   |
LL |     let _ = Some(Some(1)).filter(|o| o.is_some()).map(|o| o.unwrap());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(Some(1)).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:14:13
   |
LL |     let _ = Some(1).map(odds_out).filter(Option::is_some).map(Option::unwrap);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(1).map(odds_out).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:15:13
   |
LL |     let _ = Some(1).map(odds_out).filter(|o| o.is_some()).map(|o| o.unwrap());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(1).map(odds_out).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:17:13
   |
LL |     let _ = vec![Some(1)].into_iter().filter(Option::is_some).map(Option::unwrap);
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![Some(1)].into_iter().flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:18:13
   |
LL |     let _ = vec![Some(1)].into_iter().filter(|o| o.is_some()).map(|o| o.unwrap());
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![Some(1)].into_iter().flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:19:13
   |
LL |       let _ = vec![1]
   |  _____________^
LL | |         .into_iter()
LL | |         .map(odds_out)
LL | |         .filter(Option::is_some)
LL | |         .map(Option::unwrap);
   | |____________________________^
   |
help: consider using `flatten` instead
   |
LL |     let _ = vec![1]
LL |         .into_iter()
LL |         .map(odds_out).flatten();
   |

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:24:13
   |
LL |       let _ = vec![1]
   |  _____________^
LL | |         .into_iter()
LL | |         .map(odds_out)
LL | |         .filter(|o| o.is_some())
LL | |         .map(|o| o.unwrap());
   | |____________________________^
   |
help: consider using `flatten` instead
   |
LL |     let _ = vec![1]
LL |         .into_iter()
LL |         .map(odds_out).flatten();
   |

error: aborting due to 8 previous errors

