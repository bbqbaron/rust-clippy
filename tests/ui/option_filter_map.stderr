error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:11:12
   |
LL |    let _ = Some(Some(1)).filter(Option::is_some).map(Option::unwrap);
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(Some(1)).flatten()`
   |
   = note: `-D clippy::option-filter-map` implied by `-D warnings`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:12:12
   |
LL |    let _ = Some(Some(1)).filter(|o| o.is_some()).map(|o| o.unwrap());
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(Some(1)).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:13:12
   |
LL |    let _ = Some(1).map(odds_out).filter(Option::is_some).map(Option::unwrap);
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(1).map(odds_out).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:14:12
   |
LL |    let _ = Some(1).map(odds_out).filter(|o| o.is_some()).map(|o| o.unwrap());
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `Some(1).map(odds_out).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:16:12
   |
LL |    let _ = vec![Some(1)].into_iter().filter(Option::is_some).map(Option::unwrap);
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![Some(1)].into_iter().flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:17:12
   |
LL |    let _ = vec![Some(1)].into_iter().filter(|o| o.is_some()).map(|o| o.unwrap());
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![Some(1)].into_iter().flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:18:12
   |
LL |    let _ = vec![1].into_iter().map(odds_out).filter(Option::is_some).map(Option::unwrap);
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![1].into_iter().map(odds_out).flatten()`

error: `filter` for `Some` followed by `unwrap`
  --> $DIR/option_filter_map.rs:19:12
   |
LL |    let _ = vec![1].into_iter().map(odds_out).filter(|o| o.is_some()).map(|o| o.unwrap());
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `flatten` instead: `vec![1].into_iter().map(odds_out).flatten()`

error: aborting due to 8 previous errors

